====================================
How to use``0-add_integer`` modul
====================================

The ``0-add_integer`` modul defines the function``add_integer(a, b=98)``

``add_integer(a, b=98)``
========================

This function adds 2 integers, It returns sum of 2 integers.
Ateast one argument must be passed, if only one argument is passed the
the value ``b=98`` is uesd as the second argument for the function.
The arguments must be float or int.

Usage: ``add_integer(a, b=98)`` | ``add_integer(a)``
====================================================

Examples with successful tests:
===============================

First import the modul
	>>> add_integer = __import__('0-add_integer').add_integer

Adds 2 integers
	>>> add_integer(1, 2)
	3

Add an integer and a negative number
	>>> add_integer(100, -2)
	98

Adds an int plus the default value for the second argument b=98
	>>> add_integer(2)
	100

Adds a float to an int which are typecasted to int and the function return
int
	>>> add_integer(100.3, -2)
	98

Adds two floats which are typecasted to int and the function return int
	>>> add_integer(2.2, 3.2)
	5

Returns TypeError if non int | float value is passed to argument `a`
	>>> add_integer("j", 9)
	Traceback (most recent call last):
	TypeError: a must be an integer

Returns TypeError if non int | float value is passed to argument `b`
	>>> add_integer(9, "j")
	Traceback (most recent call last):
	TypeError: b must be an integer

Returns error if no value is passed:
	>>> add_integer()
	Traceback (most recent call last):
	TypeError: add_integer() missing 1 required positional argument: 'a'

